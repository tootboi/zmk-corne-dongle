/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>

#define MED_L 1
#define NAV_L 2
#define MOU_L 3
#define SYM_L 4
#define NUM_L 5
#define FUN_L 6
#define SMO_L 8
#define SSC_L 9
#define SEC_L 10

// Using layer taps on thumbs, having quick tap as well helps w/ repeating space/backspace
&lt { quick_tap_ms = <200>; };

/ {
        macros {
                ZMK_MACRO(taskview,
                        wait-ms = <0>;
                        tap-ms  = <10>;
                        bindings = <&kp LG(TAB)>;
                )

                ZMK_MACRO(doubleclick,
                        wait-ms = <0>;
                        tap-ms  = <10>;
                        bindings = <&mkp LCLK &mkp LCLK>;
                )
        };

        keymap {
    compatible = "zmk,keymap";

        Base {
            label = "Base";
            bindings = <
    &trans &kp Q       &kp W       &kp E        &kp R         &kp T                 &kp Y  &kp U         &kp I        &kp O       &kp P &trans
    &trans &mt LGUI A  &mt LALT S  &mt LCTRL D  &mt LSHIFT F  &kp G                 &kp H  &mt RSHIFT J  &mt RCTRL K  &mt RALT L  &mt RGUI SEMI &trans
    &trans &kp Z       &kp X       &kp C        &kp V         &kp B                 &kp N  &kp M         &kp COMMA    &kp DOT     &kp FSLH &trans
                &lt MED_L ESC  &lt NAV_L SPACE  &lt MOU_L TAB                &lt SYM_L ENTER   &lt NUM_L BACKSPACE  &lt FUN_L DEL
            >;
        };

        Media {
            label = "Media";
            bindings = <
    &trans &trans  &trans  &trans  &trans  &trans      &trans  &trans      &trans     &trans     &trans &trans
    &trans &trans  &trans  &trans  &trans  &trans      &trans  &kp C_PREV  &kp C_VOL_DN  &kp C_VOL_UP  &kp C_NEXT &trans
    &trans &trans  &trans  &trans  &trans  &trans      &trans  &trans      &trans     &trans     &trans &trans
                    &trans  &trans  &trans      &kp C_STOP  &kp C_PLAY_PAUSE &kp C_MUTE
            >;
        };

        Nav {
            label = "Nav";
            bindings = <
    &trans &trans  &trans  &trans  &trans  &trans      &trans      &trans      &trans      &trans     &trans &trans
    &trans &trans  &trans  &trans  &trans  &trans      &kp CAPS    &kp LEFT    &kp DOWN    &kp UP     &kp RIGHT &trans
    &trans &trans  &trans  &trans  &trans  &trans      &kp INSERT  &kp HOME    &kp PG_DN   &kp PG_UP  &kp END &trans
                    &trans  &trans  &trans      &trans      &kp DEL     &trans
            >;
        };

        Mouse {
            label = "Mouse";
            bindings = <
    &trans &trans  &trans  &trans  &trans  &trans      &bt BT_CLR  &bt BT_PRV  &bt BT_NXT     &trans     &trans &trans
    &trans &trans  &trans  &trans  &trans  &trans      &tog SEC_L  &doubleclick  &mkp LCLK  &mkp RCLK  &mkp MCLK &trans
    &trans &trans  &trans  &trans  &trans  &trans      &taskview  &trans  &trans    &trans     &trans &trans
                    &trans  &trans  &trans      &trans  &trans  &trans
            >;
        };

        Symbol {
            label = "Symbol";
            bindings = <
    &trans &kp LBRC   &kp AMPS   &kp STAR    &kp LPAR  &kp RBRC        &trans  &trans  &trans     &trans     &trans &trans
    &trans &kp DQT    &kp DOLLAR &kp PERCENT &kp CARET &kp PLUS        &trans  &trans  &trans     &trans     &trans &trans
    &trans &kp TILDE  &kp EXCL   &kp AT      &kp HASH  &kp PIPE        &trans  &trans  &trans     &trans     &trans &trans
                          &kp LPAR    &kp RPAR  &kp UNDER       &trans  &trans  &trans
            >;
        };

        Num {
            label = "Num";
            bindings = <
    &trans &kp LBKT  &kp N7 &kp N8 &kp N9 &kp RBKT         &trans  &trans     &trans     &trans     &trans &trans
    &trans &kp APOS  &kp N4 &kp N5 &kp N6 &kp EQUAL        &trans  &trans     &trans     &trans     &trans &trans
    &trans &kp GRAVE &kp N1 &kp N2 &kp N3 &kp BSLH         &trans  &trans     &trans     &trans     &trans &trans
                    &kp DOT &kp N0 &kp MINUS       &trans  &trans  &trans
            >;
        };

        Function {
            label = "Function";
            bindings = <
    &trans &kp F12  &kp F7 &kp F8 &kp F9 &kp RBKT         &trans  &trans  &trans     &trans     &trans &trans
    &trans &kp F11  &kp F4 &kp F5 &kp F6 &kp EQUAL        &trans  &trans  &trans     &trans     &trans &trans
    &trans &kp F10  &kp F1 &kp F2 &kp F3 &kp BSLH         &trans  &trans  &trans     &trans     &trans &trans
                    &trans &trans &trans           &trans  &trans  &trans
            >;
        };
    };
};
